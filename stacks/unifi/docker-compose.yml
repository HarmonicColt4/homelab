version: '2.3'
services:
  mongo:
    image: mongo:3.6
    container_name: ${COMPOSE_PROJECT_NAME}_mongo
    networks:
      - unifi
    restart: always
    volumes:
      - db:/data/db
  controller:
    image: "jacobalberty/unifi:${TAG:-latest}"
    container_name: ${COMPOSE_PROJECT_NAME}_controller
    depends_on:
      - mongo
    init: true
    networks:
      - unifi
      - other
    restart: always
    volumes:
      - config:/unifi
    user: unifi
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    environment:
      DB_URI: mongodb://mongo/unifi
      STATDB_URI: mongodb://mongo/unifi_stat
      DB_NAME: unifi
    ports:
      - "3478:3478/udp" # STUN
      - "8080:8080/tcp" # Device/ controller comm.
      - "1900:1900/udp" #optional
      - "10001:10001/udp" # AP discovery
      # - "8443:8443/tcp" # Controller GUI/API as seen in a web browser
      # - "6789:6789/tcp" # Speed test
      # - "8880:8880/tcp" # HTTP portal redirection
      # - "8843:8843/tcp" # HTTPS portal redirection
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`unifi.weirdrussianserver.xyz`)"
      - "traefik.http.routers.unifi.entrypoints=websecure"
      - "traefik.http.routers.unifi.tls.certresolver=production"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"
  logs:
    image: bash
    container_name: ${COMPOSE_PROJECT_NAME}_logs
    depends_on:
      - controller
    command: bash -c 'tail -F /unifi/log/*.log'
    restart: always
    volumes:
      - config:/unifi

volumes:
  config:
    driver: local
    driver_opts:
      type: nfs
      o: addr=10.13.25.3,nolock,soft,nfsvers=4
      device: ":/mnt/software/configurations/unifi"
  db:
    driver: local
    driver_opts:
      type: nfs
      o: addr=10.13.25.3,nolock,soft,nfsvers=4
      device: ":/mnt/software/databases/unifi"

networks:
  unifi:
  other:
    external: true